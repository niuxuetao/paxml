<?xml version="1.0" encoding="UTF-8"?>
<!--

    This file is part of PaxmlCore.

    PaxmlCore is free software: you can redistribute it and/or modify
    it under the terms of the GNU Affero General Public License as published by
    the Free Software Foundation, either version 3 of the License, or
    (at your option) any later version.

    PaxmlCore is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU Affero General Public License for more details.

    You should have received a copy of the GNU Affero General Public License
    along with PaxmlCore.  If not, see <http://www.gnu.org/licenses/>.

-->
<scenario>
	<!-- test list item tag and root tag -->
	<data id="myList1">${util.list(1,2)}</data>	
	<assert>
		<expected><literal><r>
  <x>1</x>
  <x>2</x>
</r></literal></expected>
		<actual><toXml rootTag="r" rootListItemTag="x" value="${myList1}"/></actual>
	</assert>

	<!-- test list item tag and root tag -->
	<data id="myList2">${util.list(1,2)}</data>	
	<assert>
		<expected><literal><xml-fragment>
  <item>1</item>
  <item>2</item>
</xml-fragment></literal></expected>
		<actual><toXml value="${myList2}"/></actual>
	</assert>
		
	<!-- test root tag -->
	<data id="xml1">
		<bla>1</bla>
	</data>
	<assert>
		<expected><literal><data>
  <bla>1</bla>
</data></literal></expected>
		<actual><toXml value="${xml1}"></toXml></actual>
	</assert>
	
	<xxx id="xml2">
		<bla>1</bla>
	</xxx>
	<assert>
		<expected><literal><xxx>
  <bla>1</bla>
</xxx></literal></expected>
		<actual><toXml value="${xml2}"></toXml></actual>
	</assert>
		
	<assert>
		<expected><literal><value>
  <bla>1</bla>
</value></literal></expected>
		<actual><toXml ><value><bla>1</bla></value></toXml></actual>
	</assert>
	
	<assert>
		<expected><literal><r>
  <bla>1</bla>
</r></literal></expected>
		<actual><toXml rootTag="r"><value><bla>1</bla></value></toXml></actual>
	</assert>
	
	<fromXml id="parsedXml1"><value><literal><x><y>1</y></x></literal></value></fromXml>
	<print>${parsedXml1}</print>
	<assert expected="1" actual="${parsedXml1.x.y}"/>
	
	<fromXml id="parsedXml2" ignoreRootTag="true"><value><literal><x><y>1</y></x></literal></value></fromXml>
	<print>${parsedXml2}</print>
	<assert expected="1" actual="${parsedXml2.y}"/>
	
	<!-- test back/forth -->
    <r id="obj">
        <li>li1</li>
        <li>li2</li>
        <a>va</a>            
        <b at="atv">vb</b>
        <c>
            <cc>1x</cc>
        </c>
        <c>
            <cc>2.01x</cc>
        </c>
        <d>
            <dd>d1</dd>
            <dd>d2</dd>
        </d>
    </r>
    
    <print>====</print>
    
    <toXml id="xml">${obj}</toXml>
    <print>${xml}</print>
        
    <toJson id="json">${obj}</toJson>
    <print>${json}</print>
    
    <assert expected="${obj}" strict="true">
        <actual><fromXml ignoreRootTag="true">${xml}</fromXml></actual>
    </assert>    
    
    <assert expected="${obj}" strict="true">
        <actual><fromJson>${json}</fromJson></actual>
    </assert>    
    
    <myXml id="myXml" myAttr="myAttr_val">
        <subTag>subTag_val</subTag>
        <iterate times="2">
            <subTag_iter attrX="attrX_val">
                <_subsub>_subsub_val</_subsub>
            </subTag_iter>
        </iterate>
    </myXml>
    
    <print>with attributes:
${myXml.toXml()}</print>
    
</scenario>
 